plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version "1.3.41"
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

repositories {
    jcenter()
}

dependencies {
    implementation "com.squareup.okhttp3:okhttp:4.0.1"
    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation 'org.jetbrains:annotations:16.0.2'       

    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:1.3.41"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:1.3.41"

    testImplementation 'org.json:json:20180813'
}

sourceSets {
  unitTest {
    java.srcDir 'src/test/unit/java'
    resources.srcDir 'src/test/resources'
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
  }
  integrationTest {
    java.srcDir 'src/test/integration/java'
    resources.srcDir 'src/test/resources'
    compileClasspath += main.output + test.output
    runtimeClasspath += main.output + test.output
  }
}

configurations {
  unitTestCompile.extendsFrom testCompile
  unitTestImplementation.extendsFrom testImplementation
  unitTestRuntime.extendsFrom testRuntime

  integrationTestCompile.extendsFrom testCompile
  integrationTestImplementation.extendsFrom testImplementation
  integrationTestRuntime.extendsFrom testRuntime
}

task unitTest(type: Test, description: 'Runs the unit tests.', group: 'Verification') {
  testClassesDirs = sourceSets.unitTest.output.classesDirs
  classpath = sourceSets.unitTest.runtimeClasspath
}

task integrationTest(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
}
